configuration_listed = "Configuration listed successfully for service: {service}"
configuration_list_failed = "Failed to list configuration for service: {service}: {error}"
no_configuration_found = "No configuration found for service: {service}"
configuration_set = "Configuration set successfully: {key}={value} for service: {service}"
configuration_set_failed = "Failed to set configuration for service: {service}: {error}"
key_required = "Key is required for set operation"
value_required = "Value is required for set operation"
configuration_deleted = "Configuration deleted successfully: {key} for service: {service}"
configuration_delete_failed = "Failed to delete configuration for service: {service}: {error}"
key_not_found = "Configuration key '{key}' not found for service: {service}"
key_required_delete = "Key is required for delete operation"
dry_run_mode = "DRY RUN MODE - No changes will be made"
dry_run_list_config = "Would list configuration for service: {service}"
dry_run_set_config = "Would set configuration: {key}={value} for service: {service}"
dry_run_delete_config = "Would delete configuration: {key} for service: {service}"
end_dry_run = "DRY RUN COMPLETE"
file_read_failed = "Failed to read environment file: {error}"
file_write_failed = "Failed to write environment file: {error}"
file_not_found = "Environment file not found: {path}"
invalid_line_warning = "Invalid line {line_num} in {file_path}: {line}"
backup_created = "Backup created: {backup_path}"
backup_removed = "Backup removed after successful write"
backup_remove_failed = "Failed to remove backup: {error}"
backup_restore_attempt = "Attempting to restore from backup due to error"
backup_restore_success = "Successfully restored from backup"
backup_restore_failed = "Failed to restore from backup: {error}"
backup_creation_failed = "Failed to create backup: {error}"
invalid_service = "Invalid service: {service}"
config_key_not_found = "Configuration key '{key}' not found"
backup_file_not_found = "Backup file not found"
reading_env_file = "Reading environment file: {file_path}"
file_not_exists = "File does not exist: {file_path}"
skipping_line = "Skipping line {line_num}: empty or comment"
parsed_config = "Parsed config: {key}={value}"
read_success = "Successfully read {count} configuration entries from {file_path}"
read_error = "Error reading file {file_path}: {error}"
creating_backup = "Creating backup for file: {file_path}"
no_backup_needed = "Source file does not exist, no backup needed: {file_path}"
backup_created_at = "Creating backup at: {backup_path}"
backup_created_success = "Backup created successfully: {backup_path}"
backup_failed = "Failed to create backup: {error}"
restoring_backup = "Restoring backup from {backup_path} to {file_path}"
backup_exists = "Backup file exists, restoring..."
backup_restored = "Backup restored and removed successfully"
backup_not_found = "Backup file not found: {backup_path}"
restore_failed = "Failed to restore backup: {error}"
atomic_write = "Performing atomic write to: {file_path}"
writing_entries = "Writing {count} configuration entries"
directory_ensured = "Ensured directory exists: {directory}"
temp_file_created = "Created temporary file: {temp_path}"
wrote_to_temp = "Wrote to temp file: {key}={value}"
synced_temp = "Synced temporary file to disk"
sync_not_critical = "Could not sync temporary file (not critical)"
replacing_file = "Replacing {file_path} with temporary file"
atomic_complete = "Atomic write completed successfully"
atomic_failed = "Atomic write failed: {error}"
cleanup_temp = "Cleaned up temporary file: {temp_path}"
cleanup_failed = "Failed to clean up temporary file: {temp_path}"
writing_env_file = "Writing environment file: {file_path}"
config_entries = "Configuration contains {count} entries"
backup_creation_failed = "Backup creation failed: {error}"
atomic_write_failed = "Atomic write failed, attempting backup restore"
backup_removed = "Backup file removed: {backup_path}"
backup_remove_failed = "Failed to remove backup: {error}"
write_complete = "Environment file write completed successfully"
unexpected_error = "Unexpected error during file write: {error}"
getting_service = "Getting environment file for service: {service}"
using_provided_env = "Using provided env_file: {env_file}"
using_default_api = "Using default API path: {path}"
using_default_view = "Using default view path: {path}"
invalid_service = "Invalid service: {service}"
argument_must_be_in_form = "Argument must be in the form KEY=VALUE"